name: CI on main branch
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  check-secrets:
      name: Checking for Secrets
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v3
        - name: Secret Scanner
          uses: secret-scanner/action@0.2.1
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: psf/black@stable
  #       with:
  #         version: 23.12.0

  # flake8-lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
  #     - uses: py-actions/flake8@v2
  #       with:
  #         ignore: "E203,W503"
  #         max-line-length: "88"
  #         path: "./online_news_classification"

  # isort:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
  #     - name: Install Poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         version: 1.7.1
  #     - name: Install dependencies
  #       run: |
  #         poetry install --no-interaction
  #     - uses: isort/isort-action@master
  #       with:
  #         isortVersion: 5.13.2
  # sonarcloud:
  #   name: SonarCloud
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - check-secrets
  #     - lint
  #     - flake8-lint
  #     # - isort
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  release-please:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: googleapis/release-please-action@v4
        with:
          # You will want to configure a GitHub Actions secret with a 
          # Personal Access Token if you want GitHub Actions CI 
          # checks to run on Release Please PRs.
          # The folowing assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          #token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}

          # if you dont need to trigger new workflow runs on a release please PR
          # its fine to use GITHUB_TOKEN as folows
          token: ${{ secrets.GITHUB_TOKEN }}      
          
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: simple
